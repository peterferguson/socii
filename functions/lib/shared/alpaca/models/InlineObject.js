"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InlineObject = void 0;
class InlineObject {
    /**
     * OAuth client ID
     */
    "clientId";
    /**
     * OAuth client secret
     */
    "clientSecret";
    /**
     * redirect URI for the OAuth flow
     */
    "redirectUri";
    /**
     * scopes requested by the OAuth flow
     */
    "scope";
    /**
     * end-user account ID
     */
    "accountId";
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            name: "clientId",
            baseName: "client_id",
            type: "string",
            format: "",
        },
        {
            name: "clientSecret",
            baseName: "client_secret",
            type: "string",
            format: "",
        },
        {
            name: "redirectUri",
            baseName: "redirect_uri",
            type: "string",
            format: "",
        },
        {
            name: "scope",
            baseName: "scope",
            type: "string",
            format: "",
        },
        {
            name: "accountId",
            baseName: "account_id",
            type: "string",
            format: "uuid",
        },
    ];
    static getAttributeTypeMap() {
        return InlineObject.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.InlineObject = InlineObject;
//# sourceMappingURL=InlineObject.js.map