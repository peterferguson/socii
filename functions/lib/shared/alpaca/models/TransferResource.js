"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferResource = void 0;
class TransferResource {
    "id";
    "createdAt";
    "updatedAt";
    "type";
    "status";
    "accountId";
    "reason";
    "expiresAt";
    "amount";
    "direction";
    "relationshipId";
    "additionalInformation";
    "bankId";
    static discriminator = "type";
    static attributeTypeMap = [
        {
            name: "id",
            baseName: "id",
            type: "string",
            format: "uuid",
        },
        {
            name: "createdAt",
            baseName: "created_at",
            type: "Date",
            format: "date-time",
        },
        {
            name: "updatedAt",
            baseName: "updated_at",
            type: "Date",
            format: "date-time",
        },
        {
            name: "type",
            baseName: "type",
            type: "TransferResourceTypeEnum",
            format: "",
        },
        {
            name: "status",
            baseName: "status",
            type: "TransferResourceStatusEnum",
            format: "",
        },
        {
            name: "accountId",
            baseName: "account_id",
            type: "string",
            format: "uuid",
        },
        {
            name: "reason",
            baseName: "reason",
            type: "string",
            format: "",
        },
        {
            name: "expiresAt",
            baseName: "expires_at",
            type: "Date",
            format: "date-time",
        },
        {
            name: "amount",
            baseName: "amount",
            type: "string",
            format: "decimal",
        },
        {
            name: "direction",
            baseName: "direction",
            type: "TransferResourceDirectionEnum",
            format: "",
        },
        {
            name: "relationshipId",
            baseName: "relationship_id",
            type: "string",
            format: "uuid",
        },
        {
            name: "additionalInformation",
            baseName: "additional_information",
            type: "string",
            format: "",
        },
        {
            name: "bankId",
            baseName: "bank_id",
            type: "string",
            format: "uuid",
        },
    ];
    static getAttributeTypeMap() {
        return TransferResource.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.TransferResource = TransferResource;
//# sourceMappingURL=TransferResource.js.map