"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonTradeActivity = void 0;
class NonTradeActivity {
    "id";
    "accountId";
    "activityType";
    "date";
    "netAmount";
    "description";
    "status";
    "symbol";
    "qty";
    "perShareAmount";
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            name: "id",
            baseName: "id",
            type: "string",
            format: "uuid",
        },
        {
            name: "accountId",
            baseName: "account_id",
            type: "string",
            format: "uuid",
        },
        {
            name: "activityType",
            baseName: "activity_type",
            type: "ActivityType",
            format: "",
        },
        {
            name: "date",
            baseName: "date",
            type: "string",
            format: "date",
        },
        {
            name: "netAmount",
            baseName: "net_amount",
            type: "string",
            format: "",
        },
        {
            name: "description",
            baseName: "description",
            type: "string",
            format: "",
        },
        {
            name: "status",
            baseName: "status",
            type: "NonTradeActivityStatusEnum",
            format: "",
        },
        {
            name: "symbol",
            baseName: "symbol",
            type: "string",
            format: "",
        },
        {
            name: "qty",
            baseName: "qty",
            type: "string",
            format: "",
        },
        {
            name: "perShareAmount",
            baseName: "per_share_amount",
            type: "string",
            format: "",
        },
    ];
    static getAttributeTypeMap() {
        return NonTradeActivity.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.NonTradeActivity = NonTradeActivity;
//# sourceMappingURL=NonTradeActivity.js.map