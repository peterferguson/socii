"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Disclosures = void 0;
/**
 * Disclosures fields denote if the account owner falls under each category defined by FINRA rule. The client has to ask questions for the end user and the values should reflect their answers.  If one of the answers is true (yes), the account goes into ACTION_REQUIRED status.
 */
class Disclosures {
    "employmentStatus";
    "employerName";
    "employerAddress";
    "employmentPosition";
    "isControlPerson";
    "isAffiliatedExchangeOrFinra";
    "isPoliticallyExposed";
    "immediateFamilyExposed";
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            name: "employmentStatus",
            baseName: "employment_status",
            type: "DisclosuresEmploymentStatusEnum",
            format: "",
        },
        {
            name: "employerName",
            baseName: "employer_name",
            type: "string",
            format: "",
        },
        {
            name: "employerAddress",
            baseName: "employer_address",
            type: "string",
            format: "",
        },
        {
            name: "employmentPosition",
            baseName: "employment_position",
            type: "string",
            format: "",
        },
        {
            name: "isControlPerson",
            baseName: "is_control_person",
            type: "boolean",
            format: "",
        },
        {
            name: "isAffiliatedExchangeOrFinra",
            baseName: "is_affiliated_exchange_or_finra",
            type: "boolean",
            format: "",
        },
        {
            name: "isPoliticallyExposed",
            baseName: "is_politically_exposed",
            type: "boolean",
            format: "",
        },
        {
            name: "immediateFamilyExposed",
            baseName: "immediate_family_exposed",
            type: "boolean",
            format: "",
        },
    ];
    static getAttributeTypeMap() {
        return Disclosures.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.Disclosures = Disclosures;
//# sourceMappingURL=Disclosures.js.map