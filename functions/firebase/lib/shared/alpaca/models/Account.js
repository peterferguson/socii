"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Account = void 0;
class Account {
    "id";
    "accountNumber";
    "status";
    /**
     * Always \"USD\"
     */
    "currency";
    "createdAt";
    "lastEquity";
    "kycResults";
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            name: "id",
            baseName: "id",
            type: "string",
            format: "uuid",
        },
        {
            name: "accountNumber",
            baseName: "account_number",
            type: "string",
            format: "",
        },
        {
            name: "status",
            baseName: "status",
            type: "AccountStatus",
            format: "",
        },
        {
            name: "currency",
            baseName: "currency",
            type: "string",
            format: "",
        },
        {
            name: "createdAt",
            baseName: "created_at",
            type: "Date",
            format: "date-time",
        },
        {
            name: "lastEquity",
            baseName: "last_equity",
            type: "string",
            format: "decimal",
        },
        {
            name: "kycResults",
            baseName: "kyc_results",
            type: "KycResult",
            format: "",
        },
    ];
    static getAttributeTypeMap() {
        return Account.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.Account = Account;
//# sourceMappingURL=Account.js.map