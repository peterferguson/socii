# coding: utf-8

"""
    Alpaca Broker API

    Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from swagger_client.api_client import ApiClient


class PortfolioApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def get_portfolio_history(self, account_id, **kwargs):  # noqa: E501
        """Returns timeseries data about equity and profit/loss (P/L) of the account in requested timespan.  # noqa: E501

        Returns timeseries data about equity and profit/loss (P/L) of the account in requested timespan.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_portfolio_history(account_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str account_id: Account identifier. (required)
        :param str period: The duration of the data in number + unit, such as `1D`, where unit; can be `D` for day, `W` for week, `M` for month and `A` for year. Defaults to `1M`
        :param str timeframe: The resolution of time window. `1Min`, `5Min`, `15Min`, `1H`, or `1D`. If omitted, `1Min` for less than 7 days period, `15Min` for less than 30 days, or otherwise `1D`.
        :param date date_end: The date the data is returned up to, in \"YYYY-MM-DD\" format. Defaults to the current market date (rolls over at the market open if `extended_hours` is false, otherwise at 7am ET)
        :param bool extended_hours: If true, include extended hours in the result. This is effective only for timeframe less than `1D`.
        :return: PortfolioHistory
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.get_portfolio_history_with_http_info(account_id, **kwargs)  # noqa: E501
        else:
            (data) = self.get_portfolio_history_with_http_info(account_id, **kwargs)  # noqa: E501
            return data

    def get_portfolio_history_with_http_info(self, account_id, **kwargs):  # noqa: E501
        """Returns timeseries data about equity and profit/loss (P/L) of the account in requested timespan.  # noqa: E501

        Returns timeseries data about equity and profit/loss (P/L) of the account in requested timespan.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_portfolio_history_with_http_info(account_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str account_id: Account identifier. (required)
        :param str period: The duration of the data in number + unit, such as `1D`, where unit; can be `D` for day, `W` for week, `M` for month and `A` for year. Defaults to `1M`
        :param str timeframe: The resolution of time window. `1Min`, `5Min`, `15Min`, `1H`, or `1D`. If omitted, `1Min` for less than 7 days period, `15Min` for less than 30 days, or otherwise `1D`.
        :param date date_end: The date the data is returned up to, in \"YYYY-MM-DD\" format. Defaults to the current market date (rolls over at the market open if `extended_hours` is false, otherwise at 7am ET)
        :param bool extended_hours: If true, include extended hours in the result. This is effective only for timeframe less than `1D`.
        :return: PortfolioHistory
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['account_id', 'period', 'timeframe', 'date_end', 'extended_hours']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_portfolio_history" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'account_id' is set
        if ('account_id' not in params or
                params['account_id'] is None):
            raise ValueError("Missing the required parameter `account_id` when calling `get_portfolio_history`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'account_id' in params:
            path_params['account_id'] = params['account_id']  # noqa: E501

        query_params = []
        if 'period' in params:
            query_params.append(('period', params['period']))  # noqa: E501
        if 'timeframe' in params:
            query_params.append(('timeframe', params['timeframe']))  # noqa: E501
        if 'date_end' in params:
            query_params.append(('date_end', params['date_end']))  # noqa: E501
        if 'extended_hours' in params:
            query_params.append(('extended_hours', params['extended_hours']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['BasicAuth']  # noqa: E501

        return self.api_client.call_api(
            '/trading/accounts/{account_id}/account/portfolio/history', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='PortfolioHistory',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
