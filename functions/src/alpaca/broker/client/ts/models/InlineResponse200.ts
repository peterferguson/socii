/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountStatus,
    AccountStatusFromJSON,
    AccountStatusFromJSONTyped,
    AccountStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface InlineResponse200
 */
export interface InlineResponse200 {
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    accountNumber?: string;
    /**
     * 
     * @type {AccountStatus}
     * @memberof InlineResponse200
     */
    status?: AccountStatus;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    buyingPower?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    regtBuyingPower?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    daytradingBuyingPower?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    cash?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    cashWithdrawable?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    cashTransferable?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    pendingTransferOut?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    portfolioValue?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    patternDayTrader?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    tradingBlocked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    transfersBlocked?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    accountBlocked?: boolean;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    createdAt?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    tradeSuspendedByUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    multiplier?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse200
     */
    shortingEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    equity?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastEquity?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    longMarketValue?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    shortMarketValue?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    initialMargin?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    maintenanceMargin?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastMaintenanceMargin?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    sma?: string;
    /**
     * 
     * @type {number}
     * @memberof InlineResponse200
     */
    daytradeCount?: number;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    previousClose?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastLongMarketValue?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastShortMarketValue?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastCash?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastInitialMargin?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastRegtBuyingPower?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastDaytradingBuyingPower?: string;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    lastBuyingPower?: string;
    /**
     * 
     * @type {number}
     * @memberof InlineResponse200
     */
    lastDaytradeCount?: number;
    /**
     * 
     * @type {string}
     * @memberof InlineResponse200
     */
    clearingBroker?: string;
}

export function InlineResponse200FromJSON(json: any): InlineResponse200 {
    return InlineResponse200FromJSONTyped(json, false);
}

export function InlineResponse200FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
        'status': !exists(json, 'status') ? undefined : AccountStatusFromJSON(json['status']),
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'buyingPower': !exists(json, 'buying_power') ? undefined : json['buying_power'],
        'regtBuyingPower': !exists(json, 'regt_buying_power') ? undefined : json['regt_buying_power'],
        'daytradingBuyingPower': !exists(json, 'daytrading_buying_power') ? undefined : json['daytrading_buying_power'],
        'cash': !exists(json, 'cash') ? undefined : json['cash'],
        'cashWithdrawable': !exists(json, 'cash_withdrawable') ? undefined : json['cash_withdrawable'],
        'cashTransferable': !exists(json, 'cash_transferable') ? undefined : json['cash_transferable'],
        'pendingTransferOut': !exists(json, 'pending_transfer_out') ? undefined : json['pending_transfer_out'],
        'portfolioValue': !exists(json, 'portfolio_value') ? undefined : json['portfolio_value'],
        'patternDayTrader': !exists(json, 'pattern_day_trader') ? undefined : json['pattern_day_trader'],
        'tradingBlocked': !exists(json, 'trading_blocked') ? undefined : json['trading_blocked'],
        'transfersBlocked': !exists(json, 'transfers_blocked') ? undefined : json['transfers_blocked'],
        'accountBlocked': !exists(json, 'account_blocked') ? undefined : json['account_blocked'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'tradeSuspendedByUser': !exists(json, 'trade_suspended_by_user') ? undefined : json['trade_suspended_by_user'],
        'multiplier': !exists(json, 'multiplier') ? undefined : json['multiplier'],
        'shortingEnabled': !exists(json, 'shorting_enabled') ? undefined : json['shorting_enabled'],
        'equity': !exists(json, 'equity') ? undefined : json['equity'],
        'lastEquity': !exists(json, 'last_equity') ? undefined : json['last_equity'],
        'longMarketValue': !exists(json, 'long_market_value') ? undefined : json['long_market_value'],
        'shortMarketValue': !exists(json, 'short_market_value') ? undefined : json['short_market_value'],
        'initialMargin': !exists(json, 'initial_margin') ? undefined : json['initial_margin'],
        'maintenanceMargin': !exists(json, 'maintenance_margin') ? undefined : json['maintenance_margin'],
        'lastMaintenanceMargin': !exists(json, 'last_maintenance_margin') ? undefined : json['last_maintenance_margin'],
        'sma': !exists(json, 'sma') ? undefined : json['sma'],
        'daytradeCount': !exists(json, 'daytrade_count') ? undefined : json['daytrade_count'],
        'previousClose': !exists(json, 'previous_close') ? undefined : json['previous_close'],
        'lastLongMarketValue': !exists(json, 'last_long_market_value') ? undefined : json['last_long_market_value'],
        'lastShortMarketValue': !exists(json, 'last_short_market_value') ? undefined : json['last_short_market_value'],
        'lastCash': !exists(json, 'last_cash') ? undefined : json['last_cash'],
        'lastInitialMargin': !exists(json, 'last_initial_margin') ? undefined : json['last_initial_margin'],
        'lastRegtBuyingPower': !exists(json, 'last_regt_buying_power') ? undefined : json['last_regt_buying_power'],
        'lastDaytradingBuyingPower': !exists(json, 'last_daytrading_buying_power') ? undefined : json['last_daytrading_buying_power'],
        'lastBuyingPower': !exists(json, 'last_buying_power') ? undefined : json['last_buying_power'],
        'lastDaytradeCount': !exists(json, 'last_daytrade_count') ? undefined : json['last_daytrade_count'],
        'clearingBroker': !exists(json, 'clearing_broker') ? undefined : json['clearing_broker'],
    };
}

export function InlineResponse200ToJSON(value?: InlineResponse200 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'account_number': value.accountNumber,
        'status': AccountStatusToJSON(value.status),
        'currency': value.currency,
        'buying_power': value.buyingPower,
        'regt_buying_power': value.regtBuyingPower,
        'daytrading_buying_power': value.daytradingBuyingPower,
        'cash': value.cash,
        'cash_withdrawable': value.cashWithdrawable,
        'cash_transferable': value.cashTransferable,
        'pending_transfer_out': value.pendingTransferOut,
        'portfolio_value': value.portfolioValue,
        'pattern_day_trader': value.patternDayTrader,
        'trading_blocked': value.tradingBlocked,
        'transfers_blocked': value.transfersBlocked,
        'account_blocked': value.accountBlocked,
        'created_at': value.createdAt,
        'trade_suspended_by_user': value.tradeSuspendedByUser,
        'multiplier': value.multiplier,
        'shorting_enabled': value.shortingEnabled,
        'equity': value.equity,
        'last_equity': value.lastEquity,
        'long_market_value': value.longMarketValue,
        'short_market_value': value.shortMarketValue,
        'initial_margin': value.initialMargin,
        'maintenance_margin': value.maintenanceMargin,
        'last_maintenance_margin': value.lastMaintenanceMargin,
        'sma': value.sma,
        'daytrade_count': value.daytradeCount,
        'previous_close': value.previousClose,
        'last_long_market_value': value.lastLongMarketValue,
        'last_short_market_value': value.lastShortMarketValue,
        'last_cash': value.lastCash,
        'last_initial_margin': value.lastInitialMargin,
        'last_regt_buying_power': value.lastRegtBuyingPower,
        'last_daytrading_buying_power': value.lastDaytradingBuyingPower,
        'last_buying_power': value.lastBuyingPower,
        'last_daytrade_count': value.lastDaytradeCount,
        'clearing_broker': value.clearingBroker,
    };
}


