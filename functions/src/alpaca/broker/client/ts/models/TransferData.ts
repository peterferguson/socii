/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime"
import {
  TransferDataAllOf,
  TransferDataAllOfFromJSON,
  TransferDataAllOfFromJSONTyped,
  TransferDataAllOfToJSON,
  UntypedWireTransferData,
} from "./"

import {
  UntypedACHTransferDataFromJSONTyped,
  UntypedWireTransferDataFromJSONTyped,
} from "./"
import { UntypedACHTransferData } from "./UntypedACHTransferData"

/**
 *
 * @export
 * @interface TransferData
 */
export interface TransferData {
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  transferType: TransferDataTransferTypeEnum
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  timing?: TransferDataTimingEnum
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  amount: string
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  direction: TransferDataDirectionEnum
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  relationshipId: string
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  additionalInformation?: string
  /**
   *
   * @type {string}
   * @memberof TransferData
   */
  bankId: string
}

/**
 * @export
 * @enum {string}
 */
export enum TransferDataTransferTypeEnum {
  Ach = "ach",
  Wire = "wire",
}
/**
 * @export
 * @enum {string}
 */
export enum TransferDataTimingEnum {
  Immediate = "immediate",
}
/**
 * @export
 * @enum {string}
 */
export enum TransferDataDirectionEnum {
  Incoming = "INCOMING",
  Outgoing = "OUTGOING",
}

export function TransferDataFromJSON(json: any): TransferData | UntypedACHTransferData | UntypedWireTransferData  {
  return TransferDataFromJSONTyped(json, false)
}

export function TransferDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): TransferData | UntypedACHTransferData | UntypedWireTransferData {
  if (json === undefined || json === null) {
    return json
  }
  if (!ignoreDiscriminator) {
    if (json["transferType"] === "ach") {
      return UntypedACHTransferDataFromJSONTyped(json, true)
    }
    if (json["transferType"] === "wire") {
      return UntypedWireTransferDataFromJSONTyped(json, true)
    }
  }
  return {
    transferType: json["transfer_type"],
    timing: !exists(json, "timing") ? undefined : json["timing"],
    amount: json["amount"],
    direction: json["direction"],
    relationshipId: json["relationship_id"],
    additionalInformation: !exists(json, "additional_information")
      ? undefined
      : json["additional_information"],
    bankId: json["bank_id"],
  }
}

export function TransferDataToJSON(value?: TransferData | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    transfer_type: value.transferType,
    timing: value.timing,
    amount: value.amount,
    direction: value.direction,
    relationship_id: value.relationshipId,
    additional_information: value.additionalInformation,
    bank_id: value.bankId,
  }
}
