/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountStatus,
    AccountStatusFromJSON,
    AccountStatusFromJSONTyped,
    AccountStatusToJSON,
    KycResult,
    KycResultFromJSON,
    KycResultFromJSONTyped,
    KycResultToJSON,
} from './';

/**
 * 
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    accountNumber?: string;
    /**
     * 
     * @type {AccountStatus}
     * @memberof Account
     */
    status?: AccountStatus;
    /**
     * Always "USD"
     * @type {string}
     * @memberof Account
     */
    currency?: string;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    lastEquity?: string;
    /**
     * 
     * @type {KycResult}
     * @memberof Account
     */
    kycResults?: KycResult;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
        'status': !exists(json, 'status') ? undefined : AccountStatusFromJSON(json['status']),
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'lastEquity': !exists(json, 'last_equity') ? undefined : json['last_equity'],
        'kycResults': !exists(json, 'kyc_results') ? undefined : KycResultFromJSON(json['kyc_results']),
    };
}

export function AccountToJSON(value?: Account | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'account_number': value.accountNumber,
        'status': AccountStatusToJSON(value.status),
        'currency': value.currency,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'last_equity': value.lastEquity,
        'kyc_results': KycResultToJSON(value.kycResults),
    };
}


