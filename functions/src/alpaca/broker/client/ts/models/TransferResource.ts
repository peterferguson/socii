/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IdentifiedResource,
    IdentifiedResourceFromJSON,
    IdentifiedResourceFromJSONTyped,
    IdentifiedResourceToJSON,
    TransferResourceAllOf,
    TransferResourceAllOfFromJSON,
    TransferResourceAllOfFromJSONTyped,
    TransferResourceAllOfToJSON,
} from './';

import {
     UntypedACHTransferDataFromJSONTyped,
     UntypedWireTransferDataFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface TransferResource
 */
export interface TransferResource {
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof TransferResource
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferResource
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    type: TransferResourceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    status: TransferResourceStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    accountId: string;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    reason?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof TransferResource
     */
    expiresAt: Date;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    direction: TransferResourceDirectionEnum;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    relationshipId: string;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    additionalInformation?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferResource
     */
    bankId: string;
}

/**
* @export
* @enum {string}
*/
export enum TransferResourceTypeEnum {
    Ach = 'ach',
    Wire = 'wire'
}/**
* @export
* @enum {string}
*/
export enum TransferResourceStatusEnum {
    Queued = 'QUEUED',
    Pending = 'PENDING',
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Complete = 'COMPLETE'
}/**
* @export
* @enum {string}
*/
export enum TransferResourceDirectionEnum {
    Incoming = 'INCOMING',
    Outgoing = 'OUTGOING'
}

export function TransferResourceFromJSON(json: any): TransferResource {
    return TransferResourceFromJSONTyped(json, false);
}

export function TransferResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'ach') {
            return UntypedACHTransferDataFromJSONTyped(json, true);
        }
        if (json['type'] === 'wire') {
            return UntypedWireTransferDataFromJSONTyped(json, true);
        }
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'type': json['type'],
        'status': json['status'],
        'accountId': json['account_id'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'expiresAt': (new Date(json['expires_at'])),
        'amount': json['amount'],
        'direction': json['direction'],
        'relationshipId': json['relationship_id'],
        'additionalInformation': !exists(json, 'additional_information') ? undefined : json['additional_information'],
        'bankId': json['bank_id'],
    };
}

export function TransferResourceToJSON(value?: TransferResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
        'type': value.type,
        'status': value.status,
        'account_id': value.accountId,
        'reason': value.reason,
        'expires_at': (value.expiresAt.toISOString()),
        'amount': value.amount,
        'direction': value.direction,
        'relationship_id': value.relationshipId,
        'additional_information': value.additionalInformation,
        'bank_id': value.bankId,
    };
}


