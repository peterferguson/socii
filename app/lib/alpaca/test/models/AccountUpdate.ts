/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Contact,
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
    Disclosures,
    DisclosuresFromJSON,
    DisclosuresFromJSONTyped,
    DisclosuresToJSON,
    Identity,
    IdentityFromJSON,
    IdentityFromJSONTyped,
    IdentityToJSON,
    TrustedContact,
    TrustedContactFromJSON,
    TrustedContactFromJSONTyped,
    TrustedContactToJSON,
} from './';

/**
 * 
 * @export
 * @interface AccountUpdate
 */
export interface AccountUpdate {
    /**
     * 
     * @type {Contact}
     * @memberof AccountUpdate
     */
    contact?: Contact;
    /**
     * 
     * @type {Identity}
     * @memberof AccountUpdate
     */
    identity?: Identity;
    /**
     * 
     * @type {Disclosures}
     * @memberof AccountUpdate
     */
    disclosures?: Disclosures;
    /**
     * 
     * @type {TrustedContact}
     * @memberof AccountUpdate
     */
    trustedContact?: TrustedContact;
}

export function AccountUpdateFromJSON(json: any): AccountUpdate {
    return AccountUpdateFromJSONTyped(json, false);
}

export function AccountUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contact': !exists(json, 'contact') ? undefined : ContactFromJSON(json['contact']),
        'identity': !exists(json, 'identity') ? undefined : IdentityFromJSON(json['identity']),
        'disclosures': !exists(json, 'disclosures') ? undefined : DisclosuresFromJSON(json['disclosures']),
        'trustedContact': !exists(json, 'trustedContact') ? undefined : TrustedContactFromJSON(json['trustedContact']),
    };
}

export function AccountUpdateToJSON(value?: AccountUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contact': ContactToJSON(value.contact),
        'identity': IdentityToJSON(value.identity),
        'disclosures': DisclosuresToJSON(value.disclosures),
        'trustedContact': TrustedContactToJSON(value.trustedContact),
    };
}


