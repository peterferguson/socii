/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BatchJournalResponse
 */
export interface BatchJournalResponse {
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    errorMessage: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    entryType: BatchJournalResponseEntryTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    fromAccount: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    toAccount: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    qty: string | null;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    price: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    status: BatchJournalResponseStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    settleDate: string | null;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    systemDate: string | null;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    netAmount: string;
    /**
     * 
     * @type {string}
     * @memberof BatchJournalResponse
     */
    description: string;
}

/**
* @export
* @enum {string}
*/
export enum BatchJournalResponseEntryTypeEnum {
    Jnlc = 'JNLC'
}/**
* @export
* @enum {string}
*/
export enum BatchJournalResponseStatusEnum {
    Pending = 'pending',
    Canceled = 'canceled',
    Executed = 'executed',
    Queued = 'queued',
    Rejected = 'rejected',
    Deleted = 'deleted'
}

export function BatchJournalResponseFromJSON(json: any): BatchJournalResponse {
    return BatchJournalResponseFromJSONTyped(json, false);
}

export function BatchJournalResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchJournalResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'errorMessage': json['error_message'],
        'entryType': json['entry_type'],
        'fromAccount': json['from_account'],
        'toAccount': json['to_account'],
        'symbol': json['symbol'],
        'qty': json['qty'],
        'price': json['price'],
        'status': json['status'],
        'settleDate': json['settle_date'],
        'systemDate': json['system_date'],
        'netAmount': json['net_amount'],
        'description': json['description'],
    };
}

export function BatchJournalResponseToJSON(value?: BatchJournalResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'error_message': value.errorMessage,
        'entry_type': value.entryType,
        'from_account': value.fromAccount,
        'to_account': value.toAccount,
        'symbol': value.symbol,
        'qty': value.qty,
        'price': value.price,
        'status': value.status,
        'settle_date': value.settleDate,
        'system_date': value.systemDate,
        'net_amount': value.netAmount,
        'description': value.description,
    };
}


