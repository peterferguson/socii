/* tslint:disable */
/* eslint-disable */
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderObject
 */
export interface OrderObject {
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    clientOrderId?: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    submittedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    filledAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    expiredAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    canceledAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    failedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderObject
     */
    replacedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    replacedBy?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    replaces?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    assetId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    symbol?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    assetClass?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    notional?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    qty?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    filledQty?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    filledAvgPrice?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    orderClass?: OrderObjectOrderClassEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    orderType?: OrderObjectOrderTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    type?: OrderObjectTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    side?: OrderObjectSideEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    timeInForce?: OrderObjectTimeInForceEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    limitPrice?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    stopPrice?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    status?: OrderObjectStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof OrderObject
     */
    extendedHours?: boolean;
    /**
     * 
     * @type {Array<OrderObject>}
     * @memberof OrderObject
     */
    legs?: Array<OrderObject> | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    trailPrice?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    trailPercent?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    hwm?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderObject
     */
    commission?: string;
}

/**
* @export
* @enum {string}
*/
export enum OrderObjectOrderClassEnum {
    Simple = 'simple',
    Bracket = 'bracket',
    Oco = 'oco',
    Oto = 'oto'
}/**
* @export
* @enum {string}
*/
export enum OrderObjectOrderTypeEnum {
    Market = 'market',
    Limit = 'limit',
    Stop = 'stop',
    StopLimit = 'stop_limit',
    TrailingStop = 'trailing_stop'
}/**
* @export
* @enum {string}
*/
export enum OrderObjectTypeEnum {
    Market = 'market',
    Limit = 'limit',
    Stop = 'stop',
    StopLimit = 'stop_limit',
    TrailingStop = 'trailing_stop'
}/**
* @export
* @enum {string}
*/
export enum OrderObjectSideEnum {
    Buy = 'buy',
    Sell = 'sell'
}/**
* @export
* @enum {string}
*/
export enum OrderObjectTimeInForceEnum {
    Day = 'day',
    Gtc = 'gtc',
    Opg = 'opg',
    Cls = 'cls',
    Ioc = 'ioc',
    Fok = 'fok'
}/**
* @export
* @enum {string}
*/
export enum OrderObjectStatusEnum {
    New = 'new',
    PartiallyFilled = 'partially_filled',
    Filled = 'filled',
    DoneForDay = 'done_for_day',
    Canceled = 'canceled',
    Expired = 'expired',
    Replaced = 'replaced',
    PendingCancel = 'pending_cancel',
    PendingReplace = 'pending_replace',
    Accepted = 'accepted',
    PendingNew = 'pending_new',
    AcceptedForBidding = 'accepted_for_bidding',
    Stopped = 'stopped',
    Rejected = 'rejected',
    Suspended = 'suspended',
    Calculated = 'calculated'
}

export function OrderObjectFromJSON(json: any): OrderObject {
    return OrderObjectFromJSONTyped(json, false);
}

export function OrderObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'clientOrderId': !exists(json, 'client_order_id') ? undefined : json['client_order_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'submittedAt': !exists(json, 'submitted_at') ? undefined : (new Date(json['submitted_at'])),
        'filledAt': !exists(json, 'filled_at') ? undefined : (json['filled_at'] === null ? null : new Date(json['filled_at'])),
        'expiredAt': !exists(json, 'expired_at') ? undefined : (json['expired_at'] === null ? null : new Date(json['expired_at'])),
        'canceledAt': !exists(json, 'canceled_at') ? undefined : (json['canceled_at'] === null ? null : new Date(json['canceled_at'])),
        'failedAt': !exists(json, 'failed_at') ? undefined : (json['failed_at'] === null ? null : new Date(json['failed_at'])),
        'replacedAt': !exists(json, 'replaced_at') ? undefined : (json['replaced_at'] === null ? null : new Date(json['replaced_at'])),
        'replacedBy': !exists(json, 'replaced_by') ? undefined : json['replaced_by'],
        'replaces': !exists(json, 'replaces') ? undefined : json['replaces'],
        'assetId': !exists(json, 'asset_id') ? undefined : json['asset_id'],
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
        'assetClass': !exists(json, 'asset_class') ? undefined : json['asset_class'],
        'notional': !exists(json, 'notional') ? undefined : json['notional'],
        'qty': !exists(json, 'qty') ? undefined : json['qty'],
        'filledQty': !exists(json, 'filled_qty') ? undefined : json['filled_qty'],
        'filledAvgPrice': !exists(json, 'filled_avg_price') ? undefined : json['filled_avg_price'],
        'orderClass': !exists(json, 'order_class') ? undefined : json['order_class'],
        'orderType': !exists(json, 'order_type') ? undefined : json['order_type'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'side': !exists(json, 'side') ? undefined : json['side'],
        'timeInForce': !exists(json, 'time_in_force') ? undefined : json['time_in_force'],
        'limitPrice': !exists(json, 'limit_price') ? undefined : json['limit_price'],
        'stopPrice': !exists(json, 'stop_price') ? undefined : json['stop_price'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'extendedHours': !exists(json, 'extended_hours') ? undefined : json['extended_hours'],
        'legs': !exists(json, 'legs') ? undefined : (json['legs'] === null ? null : (json['legs'] as Array<any>).map(OrderObjectFromJSON)),
        'trailPrice': !exists(json, 'trail_price') ? undefined : json['trail_price'],
        'trailPercent': !exists(json, 'trail_percent') ? undefined : json['trail_percent'],
        'hwm': !exists(json, 'hwm') ? undefined : json['hwm'],
        'commission': !exists(json, 'commission') ? undefined : json['commission'],
    };
}

export function OrderObjectToJSON(value?: OrderObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'client_order_id': value.clientOrderId,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'submitted_at': value.submittedAt === undefined ? undefined : (value.submittedAt.toISOString()),
        'filled_at': value.filledAt === undefined ? undefined : (value.filledAt === null ? null : value.filledAt.toISOString()),
        'expired_at': value.expiredAt === undefined ? undefined : (value.expiredAt === null ? null : value.expiredAt.toISOString()),
        'canceled_at': value.canceledAt === undefined ? undefined : (value.canceledAt === null ? null : value.canceledAt.toISOString()),
        'failed_at': value.failedAt === undefined ? undefined : (value.failedAt === null ? null : value.failedAt.toISOString()),
        'replaced_at': value.replacedAt === undefined ? undefined : (value.replacedAt === null ? null : value.replacedAt.toISOString()),
        'replaced_by': value.replacedBy,
        'replaces': value.replaces,
        'asset_id': value.assetId,
        'symbol': value.symbol,
        'asset_class': value.assetClass,
        'notional': value.notional,
        'qty': value.qty,
        'filled_qty': value.filledQty,
        'filled_avg_price': value.filledAvgPrice,
        'order_class': value.orderClass,
        'order_type': value.orderType,
        'type': value.type,
        'side': value.side,
        'time_in_force': value.timeInForce,
        'limit_price': value.limitPrice,
        'stop_price': value.stopPrice,
        'status': value.status,
        'extended_hours': value.extendedHours,
        'legs': value.legs === undefined ? undefined : (value.legs === null ? null : (value.legs as Array<any>).map(OrderObjectToJSON)),
        'trail_price': value.trailPrice,
        'trail_percent': value.trailPercent,
        'hwm': value.hwm,
        'commission': value.commission,
    };
}


