/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models"
import { Activity } from "./activity"
import { ActivityType } from "./activityType"
import { NonTradeActivityAllOf } from "./nonTradeActivityAllOf"

export class NonTradeActivity {
  "id"?: string
  "accountId"?: string
  "activityType"?: ActivityType
  "date"?: string
  "netAmount"?: string
  "description"?: string
  "status"?: NonTradeActivity.StatusEnum
  "symbol"?: string
  "qty"?: string
  "perShareAmount"?: string

  static discriminator: string | undefined = undefined

  static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
    {
      name: "id",
      baseName: "id",
      type: "string",
    },
    {
      name: "accountId",
      baseName: "account_id",
      type: "string",
    },
    {
      name: "activityType",
      baseName: "activity_type",
      type: "ActivityType",
    },
    {
      name: "date",
      baseName: "date",
      type: "string",
    },
    {
      name: "netAmount",
      baseName: "net_amount",
      type: "string",
    },
    {
      name: "description",
      baseName: "description",
      type: "string",
    },
    {
      name: "status",
      baseName: "status",
      type: "NonTradeActivity.StatusEnum",
    },
    {
      name: "symbol",
      baseName: "symbol",
      type: "string",
    },
    {
      name: "qty",
      baseName: "qty",
      type: "string",
    },
    {
      name: "perShareAmount",
      baseName: "per_share_amount",
      type: "string",
    },
  ]

  static from(json) {
    // - convert baseName to name
    for (const { baseName, name } of this.attributeTypeMap) {
      if (baseName !== name) {
        Object.assign(json, { [name]: json[baseName] })
        delete json[baseName]
      }
    }
    return Object.assign(new this(), json)
  }

  static getAttributeTypeMap() {
    return NonTradeActivity.attributeTypeMap
  }
}

// eslint-disable-next-line no-redeclare
export namespace NonTradeActivity {
  export enum StatusEnum {
    Executed = <any>"executed",
    Correct = <any>"correct",
    Canceled = <any>"canceled",
  }
}
