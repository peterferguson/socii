/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class Position {
  "assetId"?: string
  "symbol"?: string
  "exchange"?: string
  "assetClass"?: string
  "avgEntryPrice"?: string
  "qty"?: string
  "side"?: string
  "marketValue"?: string
  "costBasis"?: string
  "unrealizedPl"?: string
  "unrealizedPlpc"?: string
  "unrealizedIntradayPl"?: string
  "unrealizedIntradayPlpc"?: string
  "currentPrice"?: string
  "lastdayPrice"?: string
  "changeToday"?: string

  static readonly discriminator: string | undefined = undefined

  static readonly attributeTypeMap: Array<{
    name: string
    baseName: string
    type: string
    format: string
  }> = [
    {
      name: "assetId",
      baseName: "asset_id",
      type: "string",
      format: "",
    },
    {
      name: "symbol",
      baseName: "symbol",
      type: "string",
      format: "",
    },
    {
      name: "exchange",
      baseName: "exchange",
      type: "string",
      format: "",
    },
    {
      name: "assetClass",
      baseName: "asset_class",
      type: "string",
      format: "",
    },
    {
      name: "avgEntryPrice",
      baseName: "avg_entry_price",
      type: "string",
      format: "",
    },
    {
      name: "qty",
      baseName: "qty",
      type: "string",
      format: "",
    },
    {
      name: "side",
      baseName: "side",
      type: "string",
      format: "",
    },
    {
      name: "marketValue",
      baseName: "market_value",
      type: "string",
      format: "",
    },
    {
      name: "costBasis",
      baseName: "cost_basis",
      type: "string",
      format: "",
    },
    {
      name: "unrealizedPl",
      baseName: "unrealized_pl",
      type: "string",
      format: "",
    },
    {
      name: "unrealizedPlpc",
      baseName: "unrealized_plpc",
      type: "string",
      format: "",
    },
    {
      name: "unrealizedIntradayPl",
      baseName: "unrealized_intraday_pl",
      type: "string",
      format: "",
    },
    {
      name: "unrealizedIntradayPlpc",
      baseName: "unrealized_intraday_plpc",
      type: "string",
      format: "",
    },
    {
      name: "currentPrice",
      baseName: "current_price",
      type: "string",
      format: "",
    },
    {
      name: "lastdayPrice",
      baseName: "lastday_price",
      type: "string",
      format: "",
    },
    {
      name: "changeToday",
      baseName: "change_today",
      type: "string",
      format: "",
    },
  ]

  static getAttributeTypeMap() {
    return Position.attributeTypeMap
  }

  static from(json) {
    // - convert baseName to name
    for (const { baseName, name } of this.attributeTypeMap) {
      if (baseName !== name) {
        Object.assign(json, { [name]: json[baseName] })
        delete json[baseName]
      }
    }
    return Object.assign(new this(), json)
  }

  public constructor() {}
}
