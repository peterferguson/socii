/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccountStatus } from "./AccountStatus"

export class InlineResponse200 {
  "id"?: string
  "accountNumber"?: string
  "status"?: AccountStatus
  "currency"?: string
  "buyingPower"?: string
  "regtBuyingPower"?: string
  "daytradingBuyingPower"?: string
  "cash"?: string
  "cashWithdrawable"?: string
  "cashTransferable"?: string
  "pendingTransferOut"?: string
  "portfolioValue"?: string
  "patternDayTrader"?: boolean
  "tradingBlocked"?: boolean
  "transfersBlocked"?: boolean
  "accountBlocked"?: boolean
  "createdAt"?: string
  "tradeSuspendedByUser"?: boolean
  "multiplier"?: string
  "shortingEnabled"?: boolean
  "equity"?: string
  "lastEquity"?: string
  "longMarketValue"?: string
  "shortMarketValue"?: string
  "initialMargin"?: string
  "maintenanceMargin"?: string
  "lastMaintenanceMargin"?: string
  "sma"?: string
  "daytradeCount"?: number
  "previousClose"?: string
  "lastLongMarketValue"?: string
  "lastShortMarketValue"?: string
  "lastCash"?: string
  "lastInitialMargin"?: string
  "lastRegtBuyingPower"?: string
  "lastDaytradingBuyingPower"?: string
  "lastBuyingPower"?: string
  "lastDaytradeCount"?: number
  "clearingBroker"?: string

  static readonly discriminator: string | undefined = undefined

  static readonly attributeTypeMap: Array<{
    name: string
    baseName: string
    type: string
    format: string
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "string",
      format: "",
    },
    {
      name: "accountNumber",
      baseName: "account_number",
      type: "string",
      format: "",
    },
    {
      name: "status",
      baseName: "status",
      type: "AccountStatus",
      format: "",
    },
    {
      name: "currency",
      baseName: "currency",
      type: "string",
      format: "",
    },
    {
      name: "buyingPower",
      baseName: "buying_power",
      type: "string",
      format: "",
    },
    {
      name: "regtBuyingPower",
      baseName: "regt_buying_power",
      type: "string",
      format: "",
    },
    {
      name: "daytradingBuyingPower",
      baseName: "daytrading_buying_power",
      type: "string",
      format: "",
    },
    {
      name: "cash",
      baseName: "cash",
      type: "string",
      format: "",
    },
    {
      name: "cashWithdrawable",
      baseName: "cash_withdrawable",
      type: "string",
      format: "",
    },
    {
      name: "cashTransferable",
      baseName: "cash_transferable",
      type: "string",
      format: "",
    },
    {
      name: "pendingTransferOut",
      baseName: "pending_transfer_out",
      type: "string",
      format: "",
    },
    {
      name: "portfolioValue",
      baseName: "portfolio_value",
      type: "string",
      format: "",
    },
    {
      name: "patternDayTrader",
      baseName: "pattern_day_trader",
      type: "boolean",
      format: "",
    },
    {
      name: "tradingBlocked",
      baseName: "trading_blocked",
      type: "boolean",
      format: "",
    },
    {
      name: "transfersBlocked",
      baseName: "transfers_blocked",
      type: "boolean",
      format: "",
    },
    {
      name: "accountBlocked",
      baseName: "account_blocked",
      type: "boolean",
      format: "",
    },
    {
      name: "createdAt",
      baseName: "created_at",
      type: "string",
      format: "",
    },
    {
      name: "tradeSuspendedByUser",
      baseName: "trade_suspended_by_user",
      type: "boolean",
      format: "",
    },
    {
      name: "multiplier",
      baseName: "multiplier",
      type: "string",
      format: "",
    },
    {
      name: "shortingEnabled",
      baseName: "shorting_enabled",
      type: "boolean",
      format: "",
    },
    {
      name: "equity",
      baseName: "equity",
      type: "string",
      format: "",
    },
    {
      name: "lastEquity",
      baseName: "last_equity",
      type: "string",
      format: "",
    },
    {
      name: "longMarketValue",
      baseName: "long_market_value",
      type: "string",
      format: "",
    },
    {
      name: "shortMarketValue",
      baseName: "short_market_value",
      type: "string",
      format: "",
    },
    {
      name: "initialMargin",
      baseName: "initial_margin",
      type: "string",
      format: "",
    },
    {
      name: "maintenanceMargin",
      baseName: "maintenance_margin",
      type: "string",
      format: "",
    },
    {
      name: "lastMaintenanceMargin",
      baseName: "last_maintenance_margin",
      type: "string",
      format: "",
    },
    {
      name: "sma",
      baseName: "sma",
      type: "string",
      format: "",
    },
    {
      name: "daytradeCount",
      baseName: "daytrade_count",
      type: "number",
      format: "",
    },
    {
      name: "previousClose",
      baseName: "previous_close",
      type: "string",
      format: "",
    },
    {
      name: "lastLongMarketValue",
      baseName: "last_long_market_value",
      type: "string",
      format: "",
    },
    {
      name: "lastShortMarketValue",
      baseName: "last_short_market_value",
      type: "string",
      format: "",
    },
    {
      name: "lastCash",
      baseName: "last_cash",
      type: "string",
      format: "",
    },
    {
      name: "lastInitialMargin",
      baseName: "last_initial_margin",
      type: "string",
      format: "",
    },
    {
      name: "lastRegtBuyingPower",
      baseName: "last_regt_buying_power",
      type: "string",
      format: "",
    },
    {
      name: "lastDaytradingBuyingPower",
      baseName: "last_daytrading_buying_power",
      type: "string",
      format: "",
    },
    {
      name: "lastBuyingPower",
      baseName: "last_buying_power",
      type: "string",
      format: "",
    },
    {
      name: "lastDaytradeCount",
      baseName: "last_daytrade_count",
      type: "number",
      format: "",
    },
    {
      name: "clearingBroker",
      baseName: "clearing_broker",
      type: "string",
      format: "",
    },
  ]

  static getAttributeTypeMap() {
    return InlineResponse200.attributeTypeMap
  }

  static from(json) {
    // - convert baseName to name
    for (const { baseName, name } of this.attributeTypeMap) {
      if (baseName !== name) {
        Object.assign(json, { [name]: json[baseName] })
        delete json[baseName]
      }
    }
    return Object.assign(new this(), json)
  }

  public constructor() {}
}
