"use strict";
/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetResource = void 0;
class AssetResource {
    "id";
    "_class";
    "exchange";
    "symbol";
    "name";
    "status";
    "tradable";
    "marginable";
    "shortable";
    "easyToBorrow";
    "fractionable";
    static discriminator = undefined;
    static attributeTypeMap = [
        {
            name: "id",
            baseName: "id",
            type: "string",
            format: "",
        },
        {
            name: "_class",
            baseName: "class",
            type: "string",
            format: "",
        },
        {
            name: "exchange",
            baseName: "exchange",
            type: "string",
            format: "",
        },
        {
            name: "symbol",
            baseName: "symbol",
            type: "string",
            format: "",
        },
        {
            name: "name",
            baseName: "name",
            type: "string",
            format: "",
        },
        {
            name: "status",
            baseName: "status",
            type: "string",
            format: "",
        },
        {
            name: "tradable",
            baseName: "tradable",
            type: "boolean",
            format: "",
        },
        {
            name: "marginable",
            baseName: "marginable",
            type: "boolean",
            format: "",
        },
        {
            name: "shortable",
            baseName: "shortable",
            type: "boolean",
            format: "",
        },
        {
            name: "easyToBorrow",
            baseName: "easy_to_borrow",
            type: "boolean",
            format: "",
        },
        {
            name: "fractionable",
            baseName: "fractionable",
            type: "boolean",
            format: "",
        },
    ];
    static getAttributeTypeMap() {
        return AssetResource.attributeTypeMap;
    }
    static from(json) {
        // - convert baseName to name
        if (json) {
            for (const { baseName, name } of this.attributeTypeMap) {
                if (baseName !== name && !(name in json)) {
                    Object.assign(json, { [name]: json[baseName] });
                    delete json[baseName];
                }
            }
        }
        return Object.assign(new this(), json);
    }
    constructor() { }
}
exports.AssetResource = AssetResource;
//# sourceMappingURL=AssetResource.js.map